1. What design principles does this program violate?
		- Decomposition
		    - The code has been hyper-decomposed.  Writing to a file isn't that hard of a task as is, and should only be broken into 2 methods at most.
	  - Simplicity
				- Definitely not the simplest way possible to write the code.  Almost feels like the code is being unnecessarily future-proofed.
2. Refactor the program to improve its design.

CsvWriter.java

public class CsvWriter {
	public CsvWriter() { 
	}

	public void write(String[][] lines) {
		for (int i = 0; i < lines.length; i++)
			writeLine(lines[i]);
	}

	private void writeLine(String[] fields) {
		if (fields.length == 0)
			System.out.println();
		else {
			for (int i = 0; i < fields.length; i++) {
				if (i > 0) {
					System.out.print(",");
				}
				writeField(fields[i]);
			}
			System.out.println();
		}
	}

	private void writeField(String field) {
		if (field.indexOf(',') != -1 || field.indexOf('\"') != -1)
			System.out.print('\"', field);
		else
			System.out.print(field);
	}
}
